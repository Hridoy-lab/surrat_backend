services:
  postgres:
    container_name: postgres_surrat
    image: postgres:13
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - surrat
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  surrat:
    container_name: surrat_backend
    build:
      context: .
    restart: always
    env_file: .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_HOST=postgres
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    command: >
      bash -c "python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - surrat

volumes:
  postgres-data:

networks:
  surrat:
    external: false
